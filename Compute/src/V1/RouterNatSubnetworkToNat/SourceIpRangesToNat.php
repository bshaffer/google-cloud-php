<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/compute/v1/compute.proto

namespace Google\Cloud\Compute\V1\RouterNatSubnetworkToNat;

use UnexpectedValueException;

/**
 * Protobuf type <code>google.cloud.compute.v1.RouterNatSubnetworkToNat.SourceIpRangesToNat</code>
 */
class SourceIpRangesToNat
{
    /**
     * Generated from protobuf enum <code>ALL_IP_RANGES = 0;</code>
     */
    const ALL_IP_RANGES = 0;
    /**
     * Generated from protobuf enum <code>LIST_OF_SECONDARY_IP_RANGES = 1;</code>
     */
    const LIST_OF_SECONDARY_IP_RANGES = 1;
    /**
     * Generated from protobuf enum <code>PRIMARY_IP_RANGE = 2;</code>
     */
    const PRIMARY_IP_RANGE = 2;

    private static $valueToName = [
        self::ALL_IP_RANGES => 'ALL_IP_RANGES',
        self::LIST_OF_SECONDARY_IP_RANGES => 'LIST_OF_SECONDARY_IP_RANGES',
        self::PRIMARY_IP_RANGE => 'PRIMARY_IP_RANGE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(SourceIpRangesToNat::class, \Google\Cloud\Compute\V1\RouterNatSubnetworkToNat_SourceIpRangesToNat::class);

