# This file was automatically generated by BuildFileGenerator

# This is an API workspace, having public visibility by default makes perfect sense.
package(default_visibility = ["//visibility:public"])

##############################################################################
# Common
##############################################################################
load("@rules_proto//proto:defs.bzl", "proto_library")
load("@com_google_googleapis_imports//:imports.bzl", "proto_library_with_info")

proto_library(
    name = "compute_proto",
    srcs = [
        "compute.proto",
    ],
    deps = [
        "//google/api:annotations_proto",
        "//google/api:client_proto",
        "//google/api:resource_proto",
    ],
)

proto_library_with_info(
    name = "compute_proto_with_info",
    deps = [
        ":compute_proto",
        "//google/cloud:common_resources_proto",
    ],
)

##############################################################################
# Java
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "java_gapic_assembly_gradle_pkg",
    "java_gapic_library",
    "java_gapic_test",
    "java_grpc_library",
    "java_proto_library",
)

java_proto_library(
    name = "compute_java_proto",
    deps = [":compute_proto"],
)

java_grpc_library(
    name = "compute_java_grpc",
    srcs = [":compute_proto"],
    deps = [":compute_java_proto"],
)

java_gapic_library(
    name = "compute_java_gapic",
    src = ":compute_proto_with_info",
    gapic_yaml = "compute_gapic.yaml",
    package = "google.cloud.compute.v1",
    service_yaml = "compute_v1.yaml",
    test_deps = [
        ":compute_java_grpc",
    ],
    deps = [
        ":compute_java_proto",
    ],
)

java_gapic_test(
    name = "compute_java_gapic_test_suite",
    test_classes = [
        "com.google.cloud.compute.v1.AcceleratorTypesClientTest",
        "com.google.cloud.compute.v1.AddressesClientTest",
        "com.google.cloud.compute.v1.AutoscalersClientTest",
        "com.google.cloud.compute.v1.BackendBucketsClientTest",
        "com.google.cloud.compute.v1.BackendServicesClientTest",
        "com.google.cloud.compute.v1.DiskTypesClientTest",
        "com.google.cloud.compute.v1.DisksClientTest",
        "com.google.cloud.compute.v1.ExternalVpnGatewaysClientTest",
        "com.google.cloud.compute.v1.FirewallsClientTest",
        "com.google.cloud.compute.v1.ForwardingRulesClientTest",
        "com.google.cloud.compute.v1.GlobalAddressesClientTest",
        "com.google.cloud.compute.v1.GlobalForwardingRulesClientTest",
        "com.google.cloud.compute.v1.GlobalNetworkEndpointGroupsClientTest",
        "com.google.cloud.compute.v1.GlobalOperationsClientTest",
        "com.google.cloud.compute.v1.HealthChecksClientTest",
        "com.google.cloud.compute.v1.HttpHealthChecksClientTest",
        "com.google.cloud.compute.v1.HttpsHealthChecksClientTest",
        "com.google.cloud.compute.v1.ImagesClientTest",
        "com.google.cloud.compute.v1.InstanceGroupManagersClientTest",
        "com.google.cloud.compute.v1.InstanceGroupsClientTest",
        "com.google.cloud.compute.v1.InstanceTemplatesClientTest",
        "com.google.cloud.compute.v1.InstancesClientTest",
        "com.google.cloud.compute.v1.InterconnectAttachmentsClientTest",
        "com.google.cloud.compute.v1.InterconnectLocationsClientTest",
        "com.google.cloud.compute.v1.InterconnectsClientTest",
        "com.google.cloud.compute.v1.LicenseCodesClientTest",
        "com.google.cloud.compute.v1.LicensesClientTest",
        "com.google.cloud.compute.v1.MachineTypesClientTest",
        "com.google.cloud.compute.v1.NetworkEndpointGroupsClientTest",
        "com.google.cloud.compute.v1.NetworksClientTest",
        "com.google.cloud.compute.v1.NodeGroupsClientTest",
        "com.google.cloud.compute.v1.NodeTemplatesClientTest",
        "com.google.cloud.compute.v1.NodeTypesClientTest",
        "com.google.cloud.compute.v1.PacketMirroringsClientTest",
        "com.google.cloud.compute.v1.ProjectsClientTest",
        "com.google.cloud.compute.v1.RegionAutoscalersClientTest",
        "com.google.cloud.compute.v1.RegionBackendServicesClientTest",
        "com.google.cloud.compute.v1.RegionCommitmentsClientTest",
        "com.google.cloud.compute.v1.RegionDiskTypesClientTest",
        "com.google.cloud.compute.v1.RegionDisksClientTest",
        "com.google.cloud.compute.v1.RegionHealthChecksClientTest",
        "com.google.cloud.compute.v1.RegionInstanceGroupManagersClientTest",
        "com.google.cloud.compute.v1.RegionInstanceGroupsClientTest",
        "com.google.cloud.compute.v1.RegionOperationsClientTest",
        "com.google.cloud.compute.v1.RegionSslCertificatesClientTest",
        "com.google.cloud.compute.v1.RegionTargetHttpProxiesClientTest",
        "com.google.cloud.compute.v1.RegionTargetHttpsProxiesClientTest",
        "com.google.cloud.compute.v1.RegionUrlMapsClientTest",
        "com.google.cloud.compute.v1.RegionsClientTest",
        "com.google.cloud.compute.v1.ReservationsClientTest",
        "com.google.cloud.compute.v1.ResourcePoliciesClientTest",
        "com.google.cloud.compute.v1.RoutersClientTest",
        "com.google.cloud.compute.v1.RoutesClientTest",
        "com.google.cloud.compute.v1.SecurityPoliciesClientTest",
        "com.google.cloud.compute.v1.SnapshotsClientTest",
        "com.google.cloud.compute.v1.SslCertificatesClientTest",
        "com.google.cloud.compute.v1.SslPoliciesClientTest",
        "com.google.cloud.compute.v1.SubnetworksClientTest",
        "com.google.cloud.compute.v1.TargetHttpProxiesClientTest",
        "com.google.cloud.compute.v1.TargetHttpsProxiesClientTest",
        "com.google.cloud.compute.v1.TargetInstancesClientTest",
        "com.google.cloud.compute.v1.TargetPoolsClientTest",
        "com.google.cloud.compute.v1.TargetSslProxiesClientTest",
        "com.google.cloud.compute.v1.TargetTcpProxiesClientTest",
        "com.google.cloud.compute.v1.TargetVpnGatewaysClientTest",
        "com.google.cloud.compute.v1.UrlMapsClientTest",
        "com.google.cloud.compute.v1.VpnGatewaysClientTest",
        "com.google.cloud.compute.v1.VpnTunnelsClientTest",
        "com.google.cloud.compute.v1.ZoneOperationsClientTest",
        "com.google.cloud.compute.v1.ZonesClientTest",
    ],
    runtime_deps = [":compute_java_gapic_test"],
)

# Open Source Packages
java_gapic_assembly_gradle_pkg(
    name = "google-cloud-compute-v1-java",
    deps = [
        ":compute_java_gapic",
        ":compute_java_grpc",
        ":compute_java_proto",
        ":compute_proto",
    ],
)

##############################################################################
# Go
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "go_gapic_assembly_pkg",
    "go_gapic_library",
    "go_proto_library",
    "go_test",
)

go_proto_library(
    name = "compute_go_proto",
    compilers = ["@io_bazel_rules_go//proto:go_grpc"],
    importpath = "google.golang.org/genproto/googleapis/cloud/compute/v1",
    protos = [":compute_proto"],
    deps = [
        "//google/api:annotations_go_proto",
    ],
)

go_gapic_library(
    name = "compute_go_gapic",
    srcs = [":compute_proto_with_info"],
    grpc_service_config = None,
    importpath = "cloud.google.com/go/compute/apiv1;compute",
    service_yaml = "compute_v1.yaml",
    deps = [
        ":compute_go_proto",
    ],
)

go_test(
    name = "compute_go_gapic_test",
    srcs = [":compute_go_gapic_srcjar_test"],
    embed = [":compute_go_gapic"],
    importpath = "cloud.google.com/go/compute/apiv1",
)

# Open Source Packages
go_gapic_assembly_pkg(
    name = "gapi-cloud-compute-v1-go",
    deps = [
        ":compute_go_gapic",
        ":compute_go_gapic_srcjar-test.srcjar",
        ":compute_go_proto",
    ],
)

##############################################################################
# Python
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "moved_proto_library",
    "py_gapic_assembly_pkg",
    "py_gapic_library",
    "py_grpc_library",
    "py_proto_library",
)

moved_proto_library(
    name = "compute_moved_proto",
    srcs = [":compute_proto"],
    deps = [
        "//google/api:annotations_proto",
        "//google/api:client_proto",
        "//google/api:resource_proto",
    ],
)

py_proto_library(
    name = "compute_py_proto",
    plugin = "@protoc_docs_plugin//:docs_plugin",
    deps = [":compute_moved_proto"],
)

py_grpc_library(
    name = "compute_py_grpc",
    srcs = [":compute_moved_proto"],
    deps = [":compute_py_proto"],
)

py_gapic_library(
    name = "compute_py_gapic",
    src = ":compute_proto_with_info",
    gapic_yaml = "compute_gapic.yaml",
    package = "google.cloud.compute.v1",
    service_yaml = "compute_v1.yaml",
    deps = [
        ":compute_py_grpc",
        ":compute_py_proto",
    ],
)

# Open Source Packages
py_gapic_assembly_pkg(
    name = "compute-v1-py",
    deps = [
        ":compute_py_gapic",
        ":compute_py_grpc",
        ":compute_py_proto",
    ],
)

##############################################################################
# PHP
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "php_gapic_assembly_pkg",
    "php_gapic_library",
    "php_grpc_library",
    "php_proto_library",
)

php_proto_library(
    name = "compute_php_proto",
    deps = [":compute_proto"],
)

php_grpc_library(
    name = "compute_php_grpc",
    srcs = [":compute_proto"],
    deps = [":compute_php_proto"],
)

php_gapic_library(
    name = "compute_php_gapic",
    src = ":compute_proto_with_info",
    gapic_yaml = "compute_gapic.yaml",
    package = "google.cloud.compute.v1",
    service_yaml = "compute_v1.yaml",
    deps = [
        ":compute_php_grpc",
        ":compute_php_proto",
    ],
)

# Open Source Packages
php_gapic_assembly_pkg(
    name = "google-cloud-compute-v1-php",
    deps = [
        ":compute_php_gapic",
        ":compute_php_grpc",
        ":compute_php_proto",
    ],
)

##############################################################################
# Node.js
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "nodejs_gapic_assembly_pkg",
    "nodejs_gapic_library",
)

nodejs_gapic_library(
    name = "compute_nodejs_gapic",
    src = ":compute_proto_with_info",
    grpc_service_config = None,
    package = "google.cloud.compute.v1",
    service_yaml = "compute_v1.yaml",
    deps = [],
)

nodejs_gapic_assembly_pkg(
    name = "compute-v1-nodejs",
    deps = [
        ":compute_nodejs_gapic",
        ":compute_proto",
    ],
)

##############################################################################
# Ruby
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "ruby_gapic_assembly_pkg",
    "ruby_gapic_library",
    "ruby_grpc_library",
    "ruby_proto_library",
)

ruby_proto_library(
    name = "compute_ruby_proto",
    deps = [":compute_proto"],
)

ruby_grpc_library(
    name = "compute_ruby_grpc",
    srcs = [":compute_proto"],
    deps = [":compute_ruby_proto"],
)

ruby_gapic_library(
    name = "compute_ruby_gapic",
    src = ":compute_proto_with_info",
    gapic_yaml = "compute_gapic.yaml",
    package = "google.cloud.compute.v1",
    service_yaml = "compute_v1.yaml",
    deps = [
        ":compute_ruby_grpc",
        ":compute_ruby_proto",
    ],
)

# Open Source Packages
ruby_gapic_assembly_pkg(
    name = "google-cloud-compute-v1-ruby",
    deps = [
        ":compute_ruby_gapic",
        ":compute_ruby_grpc",
        ":compute_ruby_proto",
    ],
)

##############################################################################
# C#
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "csharp_gapic_assembly_pkg",
    "csharp_gapic_library",
    "csharp_grpc_library",
    "csharp_proto_library",
)

csharp_proto_library(
    name = "compute_csharp_proto",
    deps = [":compute_proto"],
)

csharp_grpc_library(
    name = "compute_csharp_grpc",
    srcs = [":compute_proto"],
    deps = [":compute_csharp_proto"],
)

csharp_gapic_library(
    name = "compute_csharp_gapic",
    src = ":compute_proto_with_info",
    gapic_yaml = "compute_gapic.yaml",
    package = "google.cloud.compute.v1",
    service_yaml = "compute_v1.yaml",
    deps = [
        ":compute_csharp_grpc",
        ":compute_csharp_proto",
    ],
)

# Open Source Packages
csharp_gapic_assembly_pkg(
    name = "google-cloud-compute-v1-csharp",
    deps = [
        ":compute_csharp_gapic",
        ":compute_csharp_grpc",
        ":compute_csharp_proto",
    ],
)

##############################################################################
# C++
##############################################################################
# Put your C++ rules here
